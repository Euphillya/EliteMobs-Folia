From b17dd15e81b91b6b0d967b5a79516af678dc5e10 Mon Sep 17 00:00:00 2001
From: Euphyllia Bierque <bierque.euphyllia@gmail.com>
Date: Mon, 2 Sep 2024 12:19:25 +0200
Subject: [PATCH 7/8] Fix Accessing Entity State

---
 .../elitemobs/entitytracker/EntityTracker.java      | 13 ++++++++-----
 .../elitemobs/mobconstructor/EliteEntity.java       |  7 ++++---
 .../custombosses/CustomBossEntity.java              |  8 ++++----
 .../elitemobs/npcs/chatter/NPCProximitySensor.java  | 10 +++++-----
 4 files changed, 21 insertions(+), 17 deletions(-)

diff --git a/src/main/java/com/magmaguy/elitemobs/entitytracker/EntityTracker.java b/src/main/java/com/magmaguy/elitemobs/entitytracker/EntityTracker.java
index c619b440..a25eb24f 100644
--- a/src/main/java/com/magmaguy/elitemobs/entitytracker/EntityTracker.java
+++ b/src/main/java/com/magmaguy/elitemobs/entitytracker/EntityTracker.java
@@ -178,18 +178,21 @@ public class EntityTracker implements Listener {
 
     public static void wipeShutdown() {
         for (EliteEntity eliteEntity : ((HashMap<UUID, EliteEntity>) eliteMobEntities.clone()).values())
-            eliteEntity.remove(RemovalReason.SHUTDOWN);
+            eliteEntity.getEntityScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> eliteEntity.remove(RemovalReason.SHUTDOWN), null);
         getEliteMobEntities().clear();
         for (NPCEntity npcEntity : ((HashMap<UUID, NPCEntity>) npcEntities.clone()).values())
-            npcEntity.remove(RemovalReason.SHUTDOWN);
+            npcEntity.getVillager().getScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> npcEntity.remove(RemovalReason.SHUTDOWN), null);
         getNpcEntities().clear();
         for (Block block : temporaryBlocks)
-            block.setType(Material.AIR);
+            Bukkit.getRegionScheduler().execute(MetadataHandler.PLUGIN, block.getLocation(), () -> block.setType(Material.AIR));
         temporaryBlocks.clear();
         //Necessary for things such as visual effects which are not stored in memory, only tagged
         for (World world : Bukkit.getWorlds())
-            for (Entity entity : world.getEntities())
-                unregister(entity, RemovalReason.SHUTDOWN);
+            for (Chunk chunk : world.getLoadedChunks())
+                Bukkit.getRegionScheduler().execute(MetadataHandler.PLUGIN, chunk.getWorld(), chunk.getX(), chunk.getZ(), () -> {
+                    for (Entity entity : chunk.getEntities())
+                        entity.getScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> unregister(entity, RemovalReason.SHUTDOWN), null);
+                });
         CustomBossEntity.getTrackableCustomBosses().clear();
         CrashFix.knownSessionChunks.clear();
     }
diff --git a/src/main/java/com/magmaguy/elitemobs/mobconstructor/EliteEntity.java b/src/main/java/com/magmaguy/elitemobs/mobconstructor/EliteEntity.java
index 77c3cec3..fc5696ec 100644
--- a/src/main/java/com/magmaguy/elitemobs/mobconstructor/EliteEntity.java
+++ b/src/main/java/com/magmaguy/elitemobs/mobconstructor/EliteEntity.java
@@ -653,13 +653,14 @@ public class EliteEntity {
         //This prevents the entity tracker from running this code twice when removing due to specific reasons
         //Custom bosses have their own tracking removal rules
         if (livingEntity != null && (!(this instanceof CustomBossEntity)))
-            EntityTracker.getEliteMobEntities().remove(eliteUUID);
+            livingEntity.getScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> EntityTracker.getEliteMobEntities().remove(eliteUUID), null);
         if (livingEntity != null && !removalReason.equals(RemovalReason.DEATH))
-            livingEntity.remove();
+            livingEntity.getScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> livingEntity.remove(), null);
         if (livingEntity instanceof EnderDragon enderDragon && removalReason.equals(RemovalReason.DEATH)) {
+            enderDragon.getScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> {
             enderDragon.setPhase(EnderDragon.Phase.DYING);
             if (enderDragon.getDragonBattle() != null)
-                enderDragon.getDragonBattle().generateEndPortal(false);
+                enderDragon.getDragonBattle().generateEndPortal(false);}, null);
         }
         this.livingEntity = null;
     }
diff --git a/src/main/java/com/magmaguy/elitemobs/mobconstructor/custombosses/CustomBossEntity.java b/src/main/java/com/magmaguy/elitemobs/mobconstructor/custombosses/CustomBossEntity.java
index e7871398..9349ee63 100644
--- a/src/main/java/com/magmaguy/elitemobs/mobconstructor/custombosses/CustomBossEntity.java
+++ b/src/main/java/com/magmaguy/elitemobs/mobconstructor/custombosses/CustomBossEntity.java
@@ -375,24 +375,24 @@ public class CustomBossEntity extends EliteEntity implements Listener, Persisten
             public void run() {
                 Iterator<CustomBossEntity> iterator = dynamicLevelBossEntities.iterator();
                 while (iterator.hasNext()) {
-                    CustomBossEntity customBossEntity = iterator.next();
+                    CustomBossEntity customBossEntity = iterator.next(); customBossEntity.getEntityScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> {
                     if (!customBossEntity.isValid()) {
                         iterator.remove(); // Remove from the list instead of canceling
-                        continue; // Skip to the next iteration
+                        return; // Skip to the next iteration
                     }
                     int currentLevel = customBossEntity.getLevel();
                     customBossEntity.getDynamicLevel(customBossEntity.getLocation());
                     int newLevel = customBossEntity.getLevel();
 
                     if (currentLevel == newLevel) {
-                        continue; // Skip to the next iteration if the level hasn't changed
+                        return; // Skip to the next iteration if the level hasn't changed
                     }
 
                     // In theory, the damage should update automatically; the only thing that needs updating should be the health
                     customBossEntity.setMaxHealth();
                     customBossEntity.setNormalizedHealth();
                     CustomBossMegaConsumer.setName(customBossEntity.getLivingEntity(), customBossEntity, customBossEntity.level);
-                }
+                }, null);}
             }
         }.runAtFixedRate(MetadataHandler.PLUGIN, 20 * 5L, 20 * 5L);
     }
diff --git a/src/main/java/com/magmaguy/elitemobs/npcs/chatter/NPCProximitySensor.java b/src/main/java/com/magmaguy/elitemobs/npcs/chatter/NPCProximitySensor.java
index 4b80c9b4..d831da9d 100644
--- a/src/main/java/com/magmaguy/elitemobs/npcs/chatter/NPCProximitySensor.java
+++ b/src/main/java/com/magmaguy/elitemobs/npcs/chatter/NPCProximitySensor.java
@@ -38,11 +38,11 @@ public class NPCProximitySensor implements Listener {
             @Override
             public void run() {
                 HashSet<Player> unseenPlayerList = (HashSet<Player>) nearbyPlayers.clone();
-                for (NPCEntity npcEntity : EntityTracker.getNpcEntities().values()) {
-                    if (!npcEntity.isValid()) continue;
+                for (NPCEntity npcEntity : EntityTracker.getNpcEntities().values()) { npcEntity.getVillager().getScheduler().run(MetadataHandler.PLUGIN, scheduledTask -> {
+                    if (!npcEntity.isValid()) return;
                     for (Entity entity : npcEntity.getVillager().getNearbyEntities(npcEntity.getNPCsConfigFields().getActivationRadius(),
-                            npcEntity.getNPCsConfigFields().getActivationRadius(), npcEntity.getNPCsConfigFields().getActivationRadius())) {
-                        if (!entity.getType().equals(EntityType.PLAYER)) continue;
+                            npcEntity.getNPCsConfigFields().getActivationRadius(), npcEntity.getNPCsConfigFields().getActivationRadius())) { entity.getScheduler().run(MetadataHandler.PLUGIN, scheduledTask1 -> {
+                        if (!entity.getType().equals(EntityType.PLAYER)) return;
                         Player player = (Player) entity;
                         Location rotatedLocation = npcEntity.getVillager().getLocation().setDirection(entity.getLocation().subtract(npcEntity.getVillager().getLocation()).toVector());
                         npcEntity.getVillager().teleportAsync(rotatedLocation);
@@ -55,7 +55,7 @@ public class NPCProximitySensor implements Listener {
                             nearbyPlayers.add(player);
                             startQuestIndicator(npcEntity, player);
                         }
-                    }
+                    }, null);}}, null);
                 }
 
                 nearbyPlayers.removeIf(unseenPlayerList::contains);
-- 
2.45.1.windows.1

